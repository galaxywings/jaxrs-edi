<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp"
      xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
      xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:script="http://www.mulesoft.org/schema/mule/core"
      version="CE-3.8.0"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:mulerequester="http://www.mulesoft.org/schema/mule/mulerequester"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/current/mule-amqp.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
http://www.mulesoft.org/schema/mule/mulerequester http://www.mulesoft.org/schema/mule/mulerequester/1.0-SNAPSHOT/mule-mulerequester.xsd">

    <!--
    <flow name="greetFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/mule/greet" allowedMethods="GET"
                       doc:name="HTTP"/>
        <set-variable variableName="method" value="greet"/>
        <logger level="INFO"/>
        <component>
            <singleton-object class="com.wjelogistics.edi.esb.component.MuleService"/>
        </component>
    </flow>


    <flow name="groovyConsoleFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/mule/console" allowedMethods="POST">
            <http:response-builder>
                <http:header headerName="Content-Type" value="application/json"/>
            </http:response-builder>
        </http:listener>
        <set-variable variableName="method" value="executeScript"/>
        <object-to-string-transformer/>

        <component>
            <singleton-object class="com.wjelogistics.edi.esb.component.MuleService"/>
        </component>
    </flow>

    -->

    <flow name="muleServiceFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/mule/manage/{action}" />
        <set-variable variableName="method" value="#[message.inboundProperties.'http.uri.params'.action]"/>
        <object-to-string-transformer/>

        <component>
            <singleton-object class="com.wjelogistics.edi.esb.component.MuleService"/>
        </component>

        <set-property propertyName="Content-Type" value="application/json" />
    </flow>

    <flow name="schedulerManageFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/mule/scheduler/{action}" />
        <choice>
            <when expression="#[message.inboundProperties.'http.uri.params'.action == 'stop']">
                <expression-component>app.registry.scheduleFlow.stop();</expression-component>
                <set-payload value="schedule flow stopped..." />
            </when>
            <when expression="#[message.inboundProperties.'http.uri.params'.action == 'start']">
                <expression-component>app.registry.scheduleFlow.start();</expression-component>
                <set-payload value="schedule flow started... " />
            </when>
            <otherwise>
                <set-payload value="Schedule flow status: #[app.registry.scheduleFlow.started]" />
            </otherwise>
        </choice>
        <set-property propertyName="Content-Type" value="text/plain" />
    </flow>

    <flow name="serviceDefsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/mule/services.json" />
        <set-payload value="#[Thread.currentThread().getContextClassLoader().getResourceAsStream('services.json')]"/>
        <set-property propertyName="Content-Type" value="application/json" />
    </flow>

</mule>